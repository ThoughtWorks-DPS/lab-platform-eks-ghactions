name: changes merged to main

on:
  push:
    branches:
      - "main"
    tags:
      - "!*"

jobs:

  # validate-terraform:
  #   name: validate terraform
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v2
  #     - name: configure shared pipeline job environment
  #       uses: ./.github/actions/shared-pipeline-env
  #       with:
  #         secrethub-creds: ${{ secrets.SECRETHUB_CREDENTIAL }}
  #         tfvar-env: gha-sandbox
  #     - name: run tflint, terraform validate, and terraform fmt checks
  #       uses: ThoughtWorks-DPS/terraform-action@main
  #       env:
  #         TF_WORKSPACE: gha-sandbox
  #       with:
  #         terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
  #         lint: true
  #         fmt-check-terraform: true
  #         validate-terraform: true

  # gha-sandbox-change-plan:
  #   name: gha-sandbox plan changes
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v2
  #     - name: configure shared pipeline job environment
  #       uses: ./.github/actions/shared-pipeline-env
  #       with:
  #         secrethub-creds: ${{ secrets.SECRETHUB_CREDENTIAL }}
  #         tfvar-env: gha-sandbox
  #     - name: terraform plan for gha-sandbox environment
  #       uses: ThoughtWorks-DPS/terraform-action@main
  #       env:
  #         TF_WORKSPACE: gha-sandbox
  #       with:
  #         terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
  #         plan: true

  # github repository configuration has gha-sandbox environment defined
  # and requires team member approval to perform this job
  gha-sandbox-apply-changes:
    name: gha-sandbox apply changes
    #needs: [ gha-sandbox-change-plan ]
    runs-on: ubuntu-latest
    environment:
      name: gha-sandbox
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: configure shared pipeline job environment
        uses: ./.github/actions/shared-pipeline-env
        with:
          secrethub-creds: ${{ secrets.SECRETHUB_CREDENTIAL }}
          tfvar-env: gha-sandbox
      - name: setup runner
        uses: ThoughtWorks-DPS/lab-runner-setup-action@main
        with:
          install-awspec: true
      - name: terraform apply for gha-sandbox environment
        uses: ThoughtWorks-DPS/terraform-action@main
        env:
          TF_WORKSPACE: gha-sandbox
        with:
          terraform-cloud-token: $TERRAFORM_CLOUD_TOKEN
          awspec-test: true
          test-assume-role: true
          apply: true
      # - name: test
      #   run: |
      #     echo ${AWS_ACCOUNT_ID:0:5}
      #     echo ${AWS_ASSUME_ROLE:0:5}
      #     aws sts assume-role --output json --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/$AWS_ASSUME_ROLE --role-session-name eks-configuration-test > credentials
      #     export AWS_ACCESS_KEY_ID=$(cat credentials | jq -r ".Credentials.AccessKeyId")
      #     export AWS_SECRET_ACCESS_KEY=$(cat credentials | jq -r ".Credentials.SecretAccessKey")
      #     export AWS_SESSION_TOKEN=$(cat credentials | jq -r ".Credentials.SessionToken")
      #     echo ${AWS_ACCESS_KEY_ID:0:5}
      #     echo ${AWS_SESSION_TOKEN:0:5}
      #     rspec 
